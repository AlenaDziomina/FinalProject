--select * from user;
-- update user SET id_role = 1, discount = 0, balance = 0 WHERE id_user=1;

-- -- create table direction (
-- --     id_dir int not null auto_increment,
-- --     dir_name varchar(20),
-- --     primary key (id_dir),
-- --     unique(id_dir)
-- -- );
-- 
-- -- insert into direction values (1, "name1"), (2, "name2"), (3, "name3");
-- 
-- -- select * from direction;
-- 
-- -- create table countryes (
-- --     id_count int not null auto_increment,
-- --     count_name varchar(20),
-- --     primary key (id_count),
-- --     unique(id_count)
-- -- );
-- -- 
-- -- create table direction_countrys (
-- --     id_dir int not null,
-- --     id_count int not null,
-- --     constraint fk_dir_count_id_dir foreign key (id_dir) references direction(id_dir),
-- --     constraint fk_dir_count_id_count foreign key (id_count) references countryes(id_count)
-- -- );
-- 
-- -- insert into countryes values (1, "polsk"), (2, "litva"), (3, "germany"), (4, "frans");
-- 
-- -- insert into direction_countrys values (1, 1), (1, 2), (1, 3), (2, 2), (2, 3), (3, 4);
-- 
-- -- select d.dir_name, c.count_name from direction d
-- --     inner join direction_countrys dc on (dc.id_dir = d.id_dir)
-- --     inner join countryes c on (dc.id_count = c.id_count and c.count_name = "litva");
-- --     where c.count_name = "litva";
-- 
-- -- select * from peoples;
-- -- insert into peoples(f_fio) values ('Grouk');
-- 
-- -- alter table peoples modify column id int not null auto_increment;
-- 
-- -- CREATE TABLE role (
-- --     id_role              int NOT NULL auto_increment,
-- --     role_name            varchar(20) NULL,
-- --     primary key (id_role),
-- --     unique(id_role)
-- -- );
-- -- 
-- -- insert into role(role_name) values ('USER'), ('ADMIN'), ('GUEST');
-- -- 
-- -- CREATE TABLE user (
-- --     id_user              int NOT NULL auto_increment,
-- --     id_role              int default 3,
-- --     login                varchar(20) NOT NULL,
-- --     password             int NOT NULL,
-- --     email                varchar(20) NOT NULL,
-- --     phone                varchar(20) NOT NULL,
-- --     discount             int default 0,
-- --     balance              float default 0,
-- --     lang                 varchar(2),
-- --     status               TINYINT default 1,
-- --     primary key (id_user),
-- --     unique(id_user),
-- --     unique(email),
-- --     unique(login),
-- --     constraint fk_user_role_id foreign key (id_role) references role(id_role)
-- -- );
-- 
-- select * from user;
-- -- select * from role;
-- 
-- -- alter table user modify column email varchar(60) not null;

-- CREATE TABLE country (
--     id_country          int NOT NULL auto_increment,
--     name                varchar(40) NOT NULL,
--     status              TINYINT default 1,
--     picture             varchar(60) not null,
--     primary key(id_country),
--     unique(id_country)
-- 
-- );

--alter table country add column id_text int default null;
-- alter table country drop column id_text;


-- CREATE TABLE description (
--     id_description int not null auto_increment,
--     text LONGTEXT,
--     primary key (id_description),
--     unique(id_description)
-- );

-- alter table country add column id_description int not null;
-- alter table country add constraint fk_country_description_id foreign key (id_description) references description(id_description);

-- CREATE TABLE city (
--        id_city              int NOT NULL auto_increment,
--        id_country           int NOT NULL,
--        name                 varchar(40) not null,
--        status               TINYINT default 1,
--        picture              varchar(60) not null,
--        id_description       int not null,
--        primary key (id_city),
--        unique(id_city),
--        constraint fk_city_country_id foreign key (id_country) references country(id_country),
--        constraint fk_city_description_id foreign key (id_description) references description(id_description)
-- );

--alter table hotel modify column id_description int default null;

-- CREATE TABLE hotel (
--        id_hotel             int NOT NULL auto_increment,
--        id_city              int NOT NULL,
--        name                 varchar(40) NOT NULL,
--        stars                int default 1,
--        status               TINYINT default 1,
--        picture              varchar(60) not null,
--        id_description       int not null,
--        primary key (id_hotel),
--        unique (id_hotel),
--        constraint fk_hotel_city_id foreign key (id_city) references city(id_city),
--        constraint fk_hotel_description_id foreign key (id_description) references description(id_description)
-- )




-- insert into description(text) values 
-- ('<h>ITALY</h><p>Italy, one of the most romantic and most visited countries in the world. Every corner of this country - is unique and unique. </p>
-- <p>Italy - the country that have nothing to compare - as she is beautiful and majestic. Fragile, delicate from the endless bridges and canals of Venice. Center of the universe "caput mundi" - the great Rome. Cultural and artistic heart of the world since the Renaissance - Florence proud. And how many of them still, small historic towns of Italy, sealed for centuries by artists and poets, perennial caches past and present! This country can not be used, and every building here, each bend of the street - a work of art of the Supreme Creator.</p>
-- <p>Italy is a country of miracles. You have a great opportunity to visit this beautiful fairy tale, to plunge into the unknown beauty, ride a gondola under the starry sky of Venice, wander through the ancient streets of the world, to go to eat in a small cafe, which can be found on every corner.</p>');

--select * from description;

--  insert into country (name, picture, id_description) values ('Italy', '/images/italy.jpg', 1);

-- select * from peoples;
-- insert into peoples(f_fio) values ('ttt');
--SELECT * from peoples where id = LAST_INSERT_ID();

-- CREATE TABLE tour_type (
--     id_tour_type     int not null auto_increment,
--     name_tour_type   varchar(60) not null,
--     primary key (id_tour_type),
--     unique (id_tour_type)
-- );

-- insert into tour_type(name_tour_type) values ("excursion tour"), 
--                                             ("recreation tour "),
--                                             ("weekend tour"),
--                                             ("shopping tour"),
--                                             ("ski tour");

-- CREATE TABLE transportation_mode (
--     id_mode     int not null auto_increment,
--     name_mode   varchar(60) not null,
--     primary key (id_mode),
--     unique (id_mode)
-- );

--insert into transportation_mode(name_mode) values ("air"), ("bus"), ("train"), ("ship");


-- CREATE TABLE direction (
--         id_direction         int NOT NULL auto_increment,
--         id_tour_type        int not null,
--         id_mode             int not null,
--         id_description       int not null,
--         name                 varchar(80) NOT NULL,
--         picture             varchar(60) not null,
--         text                 varchar(20) NULL,
--         status               TINYINT default 1,
--         primary key (id_direction),
--         unique (id_direction),
--         constraint fk_direction_type_id foreign key (id_tour_type) references tour_type(id_tour_type),
--         constraint fk_direction_mode_id foreign key (id_mode) references transportation_mode(id_mode),
--         constraint fk_direction_description_id foreign key (id_description) references description(id_description)
-- )

-- CREATE TABLE direction_cities (
--        id_city              int NOT NULL,
--        id_direction         int NOT NULL,
--        constraint fk_direction_cities_id_city foreign key (id_city) references city(id_city) on delete cascade,
--        constraint fk_direction_cities_id_direction foreign key (id_direction) references direction(id_direction) on delete cascade
-- )


-- CREATE TABLE direction_countries (
--        id_country           int NOT NULL,
--        id_direction         int NOT NULL,
--        constraint fk_direction_countries_id_country foreign key (id_country) references country(id_country) on delete cascade,
--        constraint fk_direction_countrues_id_direction foreign key (id_direction) references direction(id_direction) on delete cascade
-- )

-- CREATE TABLE direction_stay_hotels (
--        id_stay              int NOT NULL,
--        stay_no              int NOT NULL,
--        id_hotel             int NOT NULL,
--        id_direction         int NOT NULL,
--        status               TINYINT default 1,
--        primary key (id_stay),
--        unique (id_stay),
--        constraint fk_direction_stay_hotels_id_hotel foreign key (id_hotel) references hotel(id_hotel),
--        constraint fk_direction_stay_hotels_id_direction foreign key (id_direction) references direction(id_direction)
-- )


-- CREATE TABLE room_type (
--     id_room_type int not null auto_increment,
--     name_room_type   varchar(20) not null,
--     primary key (id_room_type),
--     unique (id_room_type)
-- );


--insert into room_type(name_room_type) values ("Budget"), ("Economy"), ("Moderate"), ("Deluxe"), ("Premium");

-- CREATE TABLE hotel_rooms (
--     id_room int not null auto_increment,
--     id_hotel int not null,
--     id_room_type int not null,
--     price float,
--     primary key (id_room),
--     unique (id_room),
--     constraint fk_hotel_rooms_id_hotel foreign key (id_hotel) references hotel(id_hotel),
--     constraint fk_hotel_room_id_room_type foreign key (id_room_type) references room_type(id_room_type)
-- );


-- CREATE TABLE tour (
--     id_tour int not null auto_increment,
--     id_direction int not null,
--     departure_date date,
--     days_count  int,
--     price   float,
--     discount    int,
--     total_seats int,
--     free_seats int default 0,
--     primary key (id_tour),
--     unique (id_tour),
--     constraint fk_tour_id_direction foreign key (id_direction) references direction(id_direction)
-- 
--     )













-- -- 
-- -- CREATE TABLE order (
-- --        date                 datetime NULL,
-- --        total_price          int NULL,
-- --        discount             int NULL,
-- --        user_discount        int NULL,
-- --        final_price          int NULL,
-- --        id_order             int NOT NULL
-- -- )
-- -- go
-- -- 
-- -- 
-- -- ALTER TABLE order
-- --        ADD PRIMARY KEY NONCLUSTERED (id_order)
-- -- go
-- -- 
-- --       
-- --       /*
-- --       ACTION is CREATE Table tours
-- --       */
-- -- 
-- -- CREATE TABLE tours (
-- --        departure_date       datetime NULL,
-- --        id_direction         int NOT NULL,
-- --        arrival_day          datetime NULL,
-- --        id_tour              char(18) NOT NULL
-- -- )
-- -- go
-- -- 
-- -- 
-- -- ALTER TABLE tours
-- --        ADD PRIMARY KEY NONCLUSTERED (id_tour)
-- -- go
-- -- 
-- --       
-- --       /*
-- --       ACTION is CREATE Table tour_stay_rooms
-- --       */
-- -- 
-- -- CREATE TABLE tour_stay_rooms (
-- --        id_stay_room         int NOT NULL,
-- --        id_tour              char(18) NOT NULL,
-- --        id_stay              int NOT NULL,
-- --        type                 varchar(20) NULL,
-- --        price                int NULL,
-- --        free_count           int NULL
-- -- )
-- -- go
-- -- 
-- -- 
-- -- ALTER TABLE tour_stay_rooms
-- --        ADD PRIMARY KEY NONCLUSTERED (id_stay_room)
-- -- go
-- -- 
-- --       
-- --       /*
-- --       ACTION is CREATE Table order_rooms
-- --       */
-- -- 
-- -- CREATE TABLE order_rooms (
-- --        id_stay_room         int NULL,
-- --        count                int NULL,
-- --        id_order             int NOT NULL
-- -- )
-- -- go
-- -- 
-- -- 
-- -- ALTER TABLE order_rooms
-- --        ADD PRIMARY KEY NONCLUSTERED (id_order)
-- -- go
-- -- 
-- --       
-- --       /*
-- --       ACTION is CREATE Table tour_transport
-- --       */
-- -- 
-- -- CREATE TABLE tour_transport (
-- --        id_transport         int NOT NULL,
-- --        id_tour              char(18) NULL,
-- --        vid                  varchar(20) NULL,
-- --        name                 varchar(20) NULL,
-- --        time                 char(18) NULL,
-- --        type                 varchar(20) NULL,
-- --        price                int NULL,
-- --        free_count           int NULL
-- -- )
-- -- go
-- -- 
-- -- 
-- -- ALTER TABLE tour_transport
-- --        ADD PRIMARY KEY NONCLUSTERED (id_transport)
-- -- go
-- -- 
-- --       
-- --       /*
-- --       ACTION is CREATE Table order_transport
-- --       */
-- -- 
-- -- CREATE TABLE order_transport (
-- --        id_transport         int NULL,
-- --        count                int NULL,
-- --        id_order             int NOT NULL
-- -- )
-- -- go
-- -- 
-- -- 
-- -- ALTER TABLE order_transport
-- --        ADD PRIMARY KEY NONCLUSTERED (id_order)
-- -- go
-- -- 
-- --       
-- --       /*
-- --       ACTION is CREATE Table role
-- --       */
-- 
-- 
-- -- go
-- -- 
-- -- 
-- -- ALTER TABLE user
-- --        ADD PRIMARY KEY NONCLUSTERED (id_user)
-- -- go
-- -- 
-- -- 
-- -- ALTER TABLE cityes
-- --        ADD FOREIGN KEY (country_id)
-- --                              REFERENCES countrys
-- -- go
-- -- 
-- -- 
-- -- ALTER TABLE direction_cityes
-- --        ADD FOREIGN KEY (id_city)
-- --                              REFERENCES cityes
-- -- go
-- -- 
-- -- 
-- -- ALTER TABLE direction_cityes
-- --        ADD FOREIGN KEY (id_direction)
-- --                              REFERENCES direction
-- -- go
-- -- 
-- -- 
-- -- ALTER TABLE direction_countrys
-- --        ADD FOREIGN KEY (id_country)
-- --                              REFERENCES countrys
-- -- go
-- -- 
-- -- 
-- -- ALTER TABLE direction_countrys
-- --        ADD FOREIGN KEY (id_direction)
-- --                              REFERENCES direction
-- -- go
-- -- 
-- -- 
-- -- ALTER TABLE hotels
-- --        ADD FOREIGN KEY (sity_id)
-- --                              REFERENCES cityes
-- -- go
-- -- 
-- -- 
-- -- ALTER TABLE direction_stays_hotels
-- --        ADD FOREIGN KEY (id_hotel)
-- --                              REFERENCES hotels
-- -- go
-- -- 
-- -- 
-- -- ALTER TABLE direction_stays_hotels
-- --        ADD FOREIGN KEY (id_direction)
-- --                              REFERENCES direction
-- -- go
-- -- 
-- -- 
-- -- ALTER TABLE tours
-- --        ADD FOREIGN KEY (id_direction)
-- --                              REFERENCES direction
-- -- go
-- -- 
-- -- 
-- -- ALTER TABLE tour_stay_rooms
-- --        ADD FOREIGN KEY (id_stay)
-- --                              REFERENCES direction_stays_hotels
-- -- go
-- -- 
-- -- 
-- -- ALTER TABLE tour_stay_rooms
-- --        ADD FOREIGN KEY (id_tour)
-- --                              REFERENCES tours
-- -- go
-- -- 
-- -- 
-- -- ALTER TABLE order_rooms
-- --        ADD FOREIGN KEY (id_stay_room)
-- --                              REFERENCES tour_stay_rooms
-- -- go
-- -- 
-- -- 
-- -- ALTER TABLE order_rooms
-- --        ADD FOREIGN KEY (id_order)
-- --                              REFERENCES order
-- -- go
-- -- 
-- -- 
-- -- ALTER TABLE tour_transport
-- --        ADD FOREIGN KEY (id_tour)
-- --                              REFERENCES tours
-- -- go
-- -- 
-- -- 
-- -- ALTER TABLE order_transport
-- --        ADD FOREIGN KEY (id_transport)
-- --                              REFERENCES tour_transport
-- -- go
-- -- 
-- -- 
-- -- ALTER TABLE order_transport
-- --        ADD FOREIGN KEY (id_order)
-- --                              REFERENCES order
-- -- go
-- -- 
-- -- 
-- -- ALTER TABLE user
-- --        ADD FOREIGN KEY (id_role)
-- --                              REFERENCES role
-- -- go
-- -- 
-- -- 
-- -- 
-- -- 
-- -- 
-- -- 
-- -- 
-- -- 
-- -- 
-- -- 
-- -- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- -- create trigger tD_countrys on countrys for DELETE as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* DELETE trigger on countrys */
-- -- begin
-- --   declare  @errno   int,
-- --            @errmsg  varchar(255)
-- --     /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --     /* countrys R/5 direction_countrys ON PARENT DELETE RESTRICT */
-- --     if exists (
-- --       select * from deleted,direction_countrys
-- --       where
-- --         /*  direction_countrys.id_country = deleted.id_country */
-- --         direction_countrys.id_country = deleted.id_country
-- --     )
-- --     begin
-- --       select @errno  = 30001,
-- --              @errmsg = 'Cannot DELETE countrys because direction_countrys exists.'
-- --       goto error
-- --     end
-- -- 
-- --     /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --     /* countrys R/1 cityes ON PARENT DELETE SET NULL */
-- --     update cityes
-- --       set
-- --         /* cityes.country_id = NULL */
-- --         cityes.country_id = NULL
-- --       from cityes,deleted
-- --       where
-- --         /* cityes.country_id = deleted.id_country */
-- --         cityes.country_id = deleted.id_country
-- -- 
-- -- 
-- --     /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --     return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- create trigger tU_countrys on countrys for UPDATE as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* UPDATE trigger on countrys */
-- -- begin
-- --   declare  @numrows int,
-- --            @nullcnt int,
-- --            @validcnt int,
-- --            @insid_country int,
-- --            @errno   int,
-- --            @errmsg  varchar(255)
-- -- 
-- --   select @numrows = @@rowcount
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* countrys R/5 direction_countrys ON PARENT UPDATE RESTRICT */
-- --   if
-- --     /* update(id_country) */
-- --     update(id_country)
-- --   begin
-- --     if exists (
-- --       select * from deleted,direction_countrys
-- --       where
-- --         /*  direction_countrys.id_country = deleted.id_country */
-- --         direction_countrys.id_country = deleted.id_country
-- --     )
-- --     begin
-- --       select @errno  = 30005,
-- --              @errmsg = 'Cannot UPDATE countrys because direction_countrys exists.'
-- --       goto error
-- --     end
-- --   end
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* countrys R/1 cityes ON PARENT UPDATE SET NULL */
-- --   if
-- --     /* update(id_country) */
-- --     update(id_country)
-- --   begin
-- --     update cityes
-- --       set
-- --         /* cityes.country_id = NULL */
-- --         cityes.country_id = NULL
-- --       from cityes,deleted
-- --       where
-- --         /* cityes.country_id = deleted.id_country */
-- --         cityes.country_id = deleted.id_country
-- --   end
-- -- 
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- 
-- -- create trigger tD_cityes on cityes for DELETE as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* DELETE trigger on cityes */
-- -- begin
-- --   declare  @errno   int,
-- --            @errmsg  varchar(255)
-- --     /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --     /* cityes R/8 direction_cityes ON PARENT DELETE RESTRICT */
-- --     if exists (
-- --       select * from deleted,direction_cityes
-- --       where
-- --         /*  direction_cityes.id_city = deleted.id_city */
-- --         direction_cityes.id_city = deleted.id_city
-- --     )
-- --     begin
-- --       select @errno  = 30001,
-- --              @errmsg = 'Cannot DELETE cityes because direction_cityes exists.'
-- --       goto error
-- --     end
-- -- 
-- --     /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --     /* cityes R/2 hotels ON PARENT DELETE SET NULL */
-- --     update hotels
-- --       set
-- --         /* hotels.sity_id = NULL */
-- --         hotels.sity_id = NULL
-- --       from hotels,deleted
-- --       where
-- --         /* hotels.sity_id = deleted.id_city */
-- --         hotels.sity_id = deleted.id_city
-- -- 
-- -- 
-- --     /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --     return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- create trigger tI_cityes on cityes for INSERT as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* INSERT trigger on cityes */
-- -- begin
-- --   declare  @numrows int,
-- --            @nullcnt int,
-- --            @validcnt int,
-- --            @errno   int,
-- --            @errmsg  varchar(255)
-- -- 
-- --   select @numrows = @@rowcount
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* countrys R/1 cityes ON CHILD INSERT SET NULL */
-- --   if
-- --     /* update(country_id) */
-- --     update(country_id)
-- --   begin
-- --     update cityes
-- --       set
-- --         /* cityes.country_id = NULL */
-- --         cityes.country_id = NULL
-- --       from cityes,inserted
-- --       where
-- --         /*  */
-- --          and
-- --         not exists (
-- --           select * from countrys
-- --           where
-- --             /* inserted.country_id = countrys.id_country */
-- --             inserted.country_id = countrys.id_country
-- --         )
-- --   end
-- -- 
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- create trigger tU_cityes on cityes for UPDATE as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* UPDATE trigger on cityes */
-- -- begin
-- --   declare  @numrows int,
-- --            @nullcnt int,
-- --            @validcnt int,
-- --            @insid_city int,
-- --            @errno   int,
-- --            @errmsg  varchar(255)
-- -- 
-- --   select @numrows = @@rowcount
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* cityes R/8 direction_cityes ON PARENT UPDATE RESTRICT */
-- --   if
-- --     /* update(id_city) */
-- --     update(id_city)
-- --   begin
-- --     if exists (
-- --       select * from deleted,direction_cityes
-- --       where
-- --         /*  direction_cityes.id_city = deleted.id_city */
-- --         direction_cityes.id_city = deleted.id_city
-- --     )
-- --     begin
-- --       select @errno  = 30005,
-- --              @errmsg = 'Cannot UPDATE cityes because direction_cityes exists.'
-- --       goto error
-- --     end
-- --   end
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* cityes R/2 hotels ON PARENT UPDATE SET NULL */
-- --   if
-- --     /* update(id_city) */
-- --     update(id_city)
-- --   begin
-- --     update hotels
-- --       set
-- --         /* hotels.sity_id = NULL */
-- --         hotels.sity_id = NULL
-- --       from hotels,deleted
-- --       where
-- --         /* hotels.sity_id = deleted.id_city */
-- --         hotels.sity_id = deleted.id_city
-- --   end
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* countrys R/1 cityes ON CHILD UPDATE SET NULL */
-- --   if
-- --     /* update(country_id) */
-- --     update(country_id)
-- --   begin
-- --     update cityes
-- --       set
-- --         /* cityes.country_id = NULL */
-- --         cityes.country_id = NULL
-- --       from cityes,inserted
-- --       where
-- --         /*  */
-- --          and 
-- --         not exists (
-- --           select * from countrys
-- --           where
-- --             /* inserted.country_id = countrys.id_country */
-- --             inserted.country_id = countrys.id_country
-- --         )
-- --   end
-- -- 
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- 
-- -- create trigger tD_direction on direction for DELETE as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* DELETE trigger on direction */
-- -- begin
-- --   declare  @errno   int,
-- --            @errmsg  varchar(255)
-- --     /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --     /* direction R/14 tours ON PARENT DELETE SET NULL */
-- --     update tours
-- --       set
-- --         /* tours.id_direction = NULL */
-- --         tours.id_direction = NULL
-- --       from tours,deleted
-- --       where
-- --         /* tours.id_direction = deleted.id_direction */
-- --         tours.id_direction = deleted.id_direction
-- -- 
-- --     /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --     /* direction R/10 direction_stays_hotels ON PARENT DELETE SET NULL */
-- --     update direction_stays_hotels
-- --       set
-- --         /* direction_stays_hotels.id_direction = NULL */
-- --         direction_stays_hotels.id_direction = NULL
-- --       from direction_stays_hotels,deleted
-- --       where
-- --         /* direction_stays_hotels.id_direction = deleted.id_direction */
-- --         direction_stays_hotels.id_direction = deleted.id_direction
-- -- 
-- --     /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --     /* direction R/7 direction_cityes ON PARENT DELETE RESTRICT */
-- --     if exists (
-- --       select * from deleted,direction_cityes
-- --       where
-- --         /*  direction_cityes.id_direction = deleted.id_direction */
-- --         direction_cityes.id_direction = deleted.id_direction
-- --     )
-- --     begin
-- --       select @errno  = 30001,
-- --              @errmsg = 'Cannot DELETE direction because direction_cityes exists.'
-- --       goto error
-- --     end
-- -- 
-- --     /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --     /* direction R/4 direction_countrys ON PARENT DELETE RESTRICT */
-- --     if exists (
-- --       select * from deleted,direction_countrys
-- --       where
-- --         /*  direction_countrys.id_direction = deleted.id_direction */
-- --         direction_countrys.id_direction = deleted.id_direction
-- --     )
-- --     begin
-- --       select @errno  = 30001,
-- --              @errmsg = 'Cannot DELETE direction because direction_countrys exists.'
-- --       goto error
-- --     end
-- -- 
-- -- 
-- --     /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --     return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- create trigger tU_direction on direction for UPDATE as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* UPDATE trigger on direction */
-- -- begin
-- --   declare  @numrows int,
-- --            @nullcnt int,
-- --            @validcnt int,
-- --            @insid_direction int,
-- --            @errno   int,
-- --            @errmsg  varchar(255)
-- -- 
-- --   select @numrows = @@rowcount
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* direction R/14 tours ON PARENT UPDATE SET NULL */
-- --   if
-- --     /* update(id_direction) */
-- --     update(id_direction)
-- --   begin
-- --     update tours
-- --       set
-- --         /* tours.id_direction = NULL */
-- --         tours.id_direction = NULL
-- --       from tours,deleted
-- --       where
-- --         /* tours.id_direction = deleted.id_direction */
-- --         tours.id_direction = deleted.id_direction
-- --   end
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* direction R/10 direction_stays_hotels ON PARENT UPDATE SET NULL */
-- --   if
-- --     /* update(id_direction) */
-- --     update(id_direction)
-- --   begin
-- --     update direction_stays_hotels
-- --       set
-- --         /* direction_stays_hotels.id_direction = NULL */
-- --         direction_stays_hotels.id_direction = NULL
-- --       from direction_stays_hotels,deleted
-- --       where
-- --         /* direction_stays_hotels.id_direction = deleted.id_direction */
-- --         direction_stays_hotels.id_direction = deleted.id_direction
-- --   end
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* direction R/7 direction_cityes ON PARENT UPDATE RESTRICT */
-- --   if
-- --     /* update(id_direction) */
-- --     update(id_direction)
-- --   begin
-- --     if exists (
-- --       select * from deleted,direction_cityes
-- --       where
-- --         /*  direction_cityes.id_direction = deleted.id_direction */
-- --         direction_cityes.id_direction = deleted.id_direction
-- --     )
-- --     begin
-- --       select @errno  = 30005,
-- --              @errmsg = 'Cannot UPDATE direction because direction_cityes exists.'
-- --       goto error
-- --     end
-- --   end
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* direction R/4 direction_countrys ON PARENT UPDATE RESTRICT */
-- --   if
-- --     /* update(id_direction) */
-- --     update(id_direction)
-- --   begin
-- --     if exists (
-- --       select * from deleted,direction_countrys
-- --       where
-- --         /*  direction_countrys.id_direction = deleted.id_direction */
-- --         direction_countrys.id_direction = deleted.id_direction
-- --     )
-- --     begin
-- --       select @errno  = 30005,
-- --              @errmsg = 'Cannot UPDATE direction because direction_countrys exists.'
-- --       goto error
-- --     end
-- --   end
-- -- 
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- 
-- -- create trigger tI_direction_cityes on direction_cityes for INSERT as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* INSERT trigger on direction_cityes */
-- -- begin
-- --   declare  @numrows int,
-- --            @nullcnt int,
-- --            @validcnt int,
-- --            @errno   int,
-- --            @errmsg  varchar(255)
-- -- 
-- --   select @numrows = @@rowcount
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* cityes R/8 direction_cityes ON CHILD INSERT RESTRICT */
-- --   if
-- --     /* update(id_city) */
-- --     update(id_city)
-- --   begin
-- --     select @nullcnt = 0
-- --     select @validcnt = count(*)
-- --       from inserted,cityes
-- --         where
-- --           /* inserted.id_city = cityes.id_city */
-- --           inserted.id_city = cityes.id_city
-- --     /*  */
-- --     
-- --     if @validcnt + @nullcnt != @numrows
-- --     begin
-- --       select @errno  = 30002,
-- --              @errmsg = 'Cannot INSERT direction_cityes because cityes does not exist.'
-- --       goto error
-- --     end
-- --   end
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* direction R/7 direction_cityes ON CHILD INSERT RESTRICT */
-- --   if
-- --     /* update(id_direction) */
-- --     update(id_direction)
-- --   begin
-- --     select @nullcnt = 0
-- --     select @validcnt = count(*)
-- --       from inserted,direction
-- --         where
-- --           /* inserted.id_direction = direction.id_direction */
-- --           inserted.id_direction = direction.id_direction
-- --     /*  */
-- --     
-- --     if @validcnt + @nullcnt != @numrows
-- --     begin
-- --       select @errno  = 30002,
-- --              @errmsg = 'Cannot INSERT direction_cityes because direction does not exist.'
-- --       goto error
-- --     end
-- --   end
-- -- 
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- create trigger tU_direction_cityes on direction_cityes for UPDATE as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* UPDATE trigger on direction_cityes */
-- -- begin
-- --   declare  @numrows int,
-- --            @nullcnt int,
-- --            @validcnt int,
-- --            @insid_city int, 
-- --            @insid_direction int,
-- --            @errno   int,
-- --            @errmsg  varchar(255)
-- -- 
-- --   select @numrows = @@rowcount
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* cityes R/8 direction_cityes ON CHILD UPDATE RESTRICT */
-- --   if
-- --     /* update(id_city) */
-- --     update(id_city)
-- --   begin
-- --     select @nullcnt = 0
-- --     select @validcnt = count(*)
-- --       from inserted,cityes
-- --         where
-- --           /* inserted.id_city = cityes.id_city */
-- --           inserted.id_city = cityes.id_city
-- --     /*  */
-- --     
-- --     if @validcnt + @nullcnt != @numrows
-- --     begin
-- --       select @errno  = 30007,
-- --              @errmsg = 'Cannot UPDATE direction_cityes because cityes does not exist.'
-- --       goto error
-- --     end
-- --   end
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* direction R/7 direction_cityes ON CHILD UPDATE RESTRICT */
-- --   if
-- --     /* update(id_direction) */
-- --     update(id_direction)
-- --   begin
-- --     select @nullcnt = 0
-- --     select @validcnt = count(*)
-- --       from inserted,direction
-- --         where
-- --           /* inserted.id_direction = direction.id_direction */
-- --           inserted.id_direction = direction.id_direction
-- --     /*  */
-- --     
-- --     if @validcnt + @nullcnt != @numrows
-- --     begin
-- --       select @errno  = 30007,
-- --              @errmsg = 'Cannot UPDATE direction_cityes because direction does not exist.'
-- --       goto error
-- --     end
-- --   end
-- -- 
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- 
-- -- create trigger tI_direction_countrys on direction_countrys for INSERT as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* INSERT trigger on direction_countrys */
-- -- begin
-- --   declare  @numrows int,
-- --            @nullcnt int,
-- --            @validcnt int,
-- --            @errno   int,
-- --            @errmsg  varchar(255)
-- -- 
-- --   select @numrows = @@rowcount
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* countrys R/5 direction_countrys ON CHILD INSERT RESTRICT */
-- --   if
-- --     /* update(id_country) */
-- --     update(id_country)
-- --   begin
-- --     select @nullcnt = 0
-- --     select @validcnt = count(*)
-- --       from inserted,countrys
-- --         where
-- --           /* inserted.id_country = countrys.id_country */
-- --           inserted.id_country = countrys.id_country
-- --     /*  */
-- --     
-- --     if @validcnt + @nullcnt != @numrows
-- --     begin
-- --       select @errno  = 30002,
-- --              @errmsg = 'Cannot INSERT direction_countrys because countrys does not exist.'
-- --       goto error
-- --     end
-- --   end
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* direction R/4 direction_countrys ON CHILD INSERT RESTRICT */
-- --   if
-- --     /* update(id_direction) */
-- --     update(id_direction)
-- --   begin
-- --     select @nullcnt = 0
-- --     select @validcnt = count(*)
-- --       from inserted,direction
-- --         where
-- --           /* inserted.id_direction = direction.id_direction */
-- --           inserted.id_direction = direction.id_direction
-- --     /*  */
-- --     
-- --     if @validcnt + @nullcnt != @numrows
-- --     begin
-- --       select @errno  = 30002,
-- --              @errmsg = 'Cannot INSERT direction_countrys because direction does not exist.'
-- --       goto error
-- --     end
-- --   end
-- -- 
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- create trigger tU_direction_countrys on direction_countrys for UPDATE as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* UPDATE trigger on direction_countrys */
-- -- begin
-- --   declare  @numrows int,
-- --            @nullcnt int,
-- --            @validcnt int,
-- --            @insid_country int, 
-- --            @insid_direction int,
-- --            @errno   int,
-- --            @errmsg  varchar(255)
-- -- 
-- --   select @numrows = @@rowcount
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* countrys R/5 direction_countrys ON CHILD UPDATE RESTRICT */
-- --   if
-- --     /* update(id_country) */
-- --     update(id_country)
-- --   begin
-- --     select @nullcnt = 0
-- --     select @validcnt = count(*)
-- --       from inserted,countrys
-- --         where
-- --           /* inserted.id_country = countrys.id_country */
-- --           inserted.id_country = countrys.id_country
-- --     /*  */
-- --     
-- --     if @validcnt + @nullcnt != @numrows
-- --     begin
-- --       select @errno  = 30007,
-- --              @errmsg = 'Cannot UPDATE direction_countrys because countrys does not exist.'
-- --       goto error
-- --     end
-- --   end
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* direction R/4 direction_countrys ON CHILD UPDATE RESTRICT */
-- --   if
-- --     /* update(id_direction) */
-- --     update(id_direction)
-- --   begin
-- --     select @nullcnt = 0
-- --     select @validcnt = count(*)
-- --       from inserted,direction
-- --         where
-- --           /* inserted.id_direction = direction.id_direction */
-- --           inserted.id_direction = direction.id_direction
-- --     /*  */
-- --     
-- --     if @validcnt + @nullcnt != @numrows
-- --     begin
-- --       select @errno  = 30007,
-- --              @errmsg = 'Cannot UPDATE direction_countrys because direction does not exist.'
-- --       goto error
-- --     end
-- --   end
-- -- 
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- 
-- -- create trigger tD_hotels on hotels for DELETE as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* DELETE trigger on hotels */
-- -- begin
-- --   declare  @errno   int,
-- --            @errmsg  varchar(255)
-- --     /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --     /* hotels R/11 direction_stays_hotels ON PARENT DELETE SET NULL */
-- --     update direction_stays_hotels
-- --       set
-- --         /* direction_stays_hotels.id_hotel = NULL */
-- --         direction_stays_hotels.id_hotel = NULL
-- --       from direction_stays_hotels,deleted
-- --       where
-- --         /* direction_stays_hotels.id_hotel = deleted.id_hotel */
-- --         direction_stays_hotels.id_hotel = deleted.id_hotel
-- -- 
-- -- 
-- --     /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --     return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- create trigger tI_hotels on hotels for INSERT as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* INSERT trigger on hotels */
-- -- begin
-- --   declare  @numrows int,
-- --            @nullcnt int,
-- --            @validcnt int,
-- --            @errno   int,
-- --            @errmsg  varchar(255)
-- -- 
-- --   select @numrows = @@rowcount
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* cityes R/2 hotels ON CHILD INSERT SET NULL */
-- --   if
-- --     /* update(sity_id) */
-- --     update(sity_id)
-- --   begin
-- --     update hotels
-- --       set
-- --         /* hotels.sity_id = NULL */
-- --         hotels.sity_id = NULL
-- --       from hotels,inserted
-- --       where
-- --         /*  */
-- --          and
-- --         not exists (
-- --           select * from cityes
-- --           where
-- --             /* inserted.sity_id = cityes.id_city */
-- --             inserted.sity_id = cityes.id_city
-- --         )
-- --   end
-- -- 
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- create trigger tU_hotels on hotels for UPDATE as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* UPDATE trigger on hotels */
-- -- begin
-- --   declare  @numrows int,
-- --            @nullcnt int,
-- --            @validcnt int,
-- --            @insid_hotel int,
-- --            @errno   int,
-- --            @errmsg  varchar(255)
-- -- 
-- --   select @numrows = @@rowcount
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* hotels R/11 direction_stays_hotels ON PARENT UPDATE SET NULL */
-- --   if
-- --     /* update(id_hotel) */
-- --     update(id_hotel)
-- --   begin
-- --     update direction_stays_hotels
-- --       set
-- --         /* direction_stays_hotels.id_hotel = NULL */
-- --         direction_stays_hotels.id_hotel = NULL
-- --       from direction_stays_hotels,deleted
-- --       where
-- --         /* direction_stays_hotels.id_hotel = deleted.id_hotel */
-- --         direction_stays_hotels.id_hotel = deleted.id_hotel
-- --   end
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* cityes R/2 hotels ON CHILD UPDATE SET NULL */
-- --   if
-- --     /* update(sity_id) */
-- --     update(sity_id)
-- --   begin
-- --     update hotels
-- --       set
-- --         /* hotels.sity_id = NULL */
-- --         hotels.sity_id = NULL
-- --       from hotels,inserted
-- --       where
-- --         /*  */
-- --          and 
-- --         not exists (
-- --           select * from cityes
-- --           where
-- --             /* inserted.sity_id = cityes.id_city */
-- --             inserted.sity_id = cityes.id_city
-- --         )
-- --   end
-- -- 
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- 
-- -- create trigger tD_direction_stays_hotels on direction_stays_hotels for DELETE as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* DELETE trigger on direction_stays_hotels */
-- -- begin
-- --   declare  @errno   int,
-- --            @errmsg  varchar(255)
-- --     /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --     /* direction_stays_hotels R/13 tour_stay_rooms ON PARENT DELETE SET NULL */
-- --     update tour_stay_rooms
-- --       set
-- --         /* tour_stay_rooms.id_stay = NULL */
-- --         tour_stay_rooms.id_stay = NULL
-- --       from tour_stay_rooms,deleted
-- --       where
-- --         /* tour_stay_rooms.id_stay = deleted.id_stay */
-- --         tour_stay_rooms.id_stay = deleted.id_stay
-- -- 
-- -- 
-- --     /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --     return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- create trigger tI_direction_stays_hotels on direction_stays_hotels for INSERT as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* INSERT trigger on direction_stays_hotels */
-- -- begin
-- --   declare  @numrows int,
-- --            @nullcnt int,
-- --            @validcnt int,
-- --            @errno   int,
-- --            @errmsg  varchar(255)
-- -- 
-- --   select @numrows = @@rowcount
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* hotels R/11 direction_stays_hotels ON CHILD INSERT SET NULL */
-- --   if
-- --     /* update(id_hotel) */
-- --     update(id_hotel)
-- --   begin
-- --     update direction_stays_hotels
-- --       set
-- --         /* direction_stays_hotels.id_hotel = NULL */
-- --         direction_stays_hotels.id_hotel = NULL
-- --       from direction_stays_hotels,inserted
-- --       where
-- --         /*  */
-- --          and
-- --         not exists (
-- --           select * from hotels
-- --           where
-- --             /* inserted.id_hotel = hotels.id_hotel */
-- --             inserted.id_hotel = hotels.id_hotel
-- --         )
-- --   end
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* direction R/10 direction_stays_hotels ON CHILD INSERT SET NULL */
-- --   if
-- --     /* update(id_direction) */
-- --     update(id_direction)
-- --   begin
-- --     update direction_stays_hotels
-- --       set
-- --         /* direction_stays_hotels.id_direction = NULL */
-- --         direction_stays_hotels.id_direction = NULL
-- --       from direction_stays_hotels,inserted
-- --       where
-- --         /*  */
-- --          and
-- --         not exists (
-- --           select * from direction
-- --           where
-- --             /* inserted.id_direction = direction.id_direction */
-- --             inserted.id_direction = direction.id_direction
-- --         )
-- --   end
-- -- 
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- create trigger tU_direction_stays_hotels on direction_stays_hotels for UPDATE as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* UPDATE trigger on direction_stays_hotels */
-- -- begin
-- --   declare  @numrows int,
-- --            @nullcnt int,
-- --            @validcnt int,
-- --            @insid_stay int,
-- --            @errno   int,
-- --            @errmsg  varchar(255)
-- -- 
-- --   select @numrows = @@rowcount
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* direction_stays_hotels R/13 tour_stay_rooms ON PARENT UPDATE SET NULL */
-- --   if
-- --     /* update(id_stay) */
-- --     update(id_stay)
-- --   begin
-- --     update tour_stay_rooms
-- --       set
-- --         /* tour_stay_rooms.id_stay = NULL */
-- --         tour_stay_rooms.id_stay = NULL
-- --       from tour_stay_rooms,deleted
-- --       where
-- --         /* tour_stay_rooms.id_stay = deleted.id_stay */
-- --         tour_stay_rooms.id_stay = deleted.id_stay
-- --   end
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* hotels R/11 direction_stays_hotels ON CHILD UPDATE SET NULL */
-- --   if
-- --     /* update(id_hotel) */
-- --     update(id_hotel)
-- --   begin
-- --     update direction_stays_hotels
-- --       set
-- --         /* direction_stays_hotels.id_hotel = NULL */
-- --         direction_stays_hotels.id_hotel = NULL
-- --       from direction_stays_hotels,inserted
-- --       where
-- --         /*  */
-- --          and 
-- --         not exists (
-- --           select * from hotels
-- --           where
-- --             /* inserted.id_hotel = hotels.id_hotel */
-- --             inserted.id_hotel = hotels.id_hotel
-- --         )
-- --   end
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* direction R/10 direction_stays_hotels ON CHILD UPDATE SET NULL */
-- --   if
-- --     /* update(id_direction) */
-- --     update(id_direction)
-- --   begin
-- --     update direction_stays_hotels
-- --       set
-- --         /* direction_stays_hotels.id_direction = NULL */
-- --         direction_stays_hotels.id_direction = NULL
-- --       from direction_stays_hotels,inserted
-- --       where
-- --         /*  */
-- --          and 
-- --         not exists (
-- --           select * from direction
-- --           where
-- --             /* inserted.id_direction = direction.id_direction */
-- --             inserted.id_direction = direction.id_direction
-- --         )
-- --   end
-- -- 
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- 
-- -- create trigger tD_order on order for DELETE as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* DELETE trigger on order */
-- -- begin
-- --   declare  @errno   int,
-- --            @errmsg  varchar(255)
-- --     /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --     /* order R/18 order_transport ON PARENT DELETE RESTRICT */
-- --     if exists (
-- --       select * from deleted,order_transport
-- --       where
-- --         /*  order_transport.id_order = deleted.id_order */
-- --         order_transport.id_order = deleted.id_order
-- --     )
-- --     begin
-- --       select @errno  = 30001,
-- --              @errmsg = 'Cannot DELETE order because order_transport exists.'
-- --       goto error
-- --     end
-- -- 
-- --     /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --     /* order R/16 order_rooms ON PARENT DELETE RESTRICT */
-- --     if exists (
-- --       select * from deleted,order_rooms
-- --       where
-- --         /*  order_rooms.id_order = deleted.id_order */
-- --         order_rooms.id_order = deleted.id_order
-- --     )
-- --     begin
-- --       select @errno  = 30001,
-- --              @errmsg = 'Cannot DELETE order because order_rooms exists.'
-- --       goto error
-- --     end
-- -- 
-- -- 
-- --     /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --     return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- create trigger tU_order on order for UPDATE as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* UPDATE trigger on order */
-- -- begin
-- --   declare  @numrows int,
-- --            @nullcnt int,
-- --            @validcnt int,
-- --            @insid_order int,
-- --            @errno   int,
-- --            @errmsg  varchar(255)
-- -- 
-- --   select @numrows = @@rowcount
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* order R/18 order_transport ON PARENT UPDATE RESTRICT */
-- --   if
-- --     /* update(id_order) */
-- --     update(id_order)
-- --   begin
-- --     if exists (
-- --       select * from deleted,order_transport
-- --       where
-- --         /*  order_transport.id_order = deleted.id_order */
-- --         order_transport.id_order = deleted.id_order
-- --     )
-- --     begin
-- --       select @errno  = 30005,
-- --              @errmsg = 'Cannot UPDATE order because order_transport exists.'
-- --       goto error
-- --     end
-- --   end
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* order R/16 order_rooms ON PARENT UPDATE RESTRICT */
-- --   if
-- --     /* update(id_order) */
-- --     update(id_order)
-- --   begin
-- --     if exists (
-- --       select * from deleted,order_rooms
-- --       where
-- --         /*  order_rooms.id_order = deleted.id_order */
-- --         order_rooms.id_order = deleted.id_order
-- --     )
-- --     begin
-- --       select @errno  = 30005,
-- --              @errmsg = 'Cannot UPDATE order because order_rooms exists.'
-- --       goto error
-- --     end
-- --   end
-- -- 
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- 
-- -- create trigger tD_tours on tours for DELETE as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* DELETE trigger on tours */
-- -- begin
-- --   declare  @errno   int,
-- --            @errmsg  varchar(255)
-- --     /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --     /* tours R/15 tour_transport ON PARENT DELETE SET NULL */
-- --     update tour_transport
-- --       set
-- --         /* tour_transport.id_tour = NULL */
-- --         tour_transport.id_tour = NULL
-- --       from tour_transport,deleted
-- --       where
-- --         /* tour_transport.id_tour = deleted.id_tour */
-- --         tour_transport.id_tour = deleted.id_tour
-- -- 
-- --     /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --     /* tours R/12 tour_stay_rooms ON PARENT DELETE SET NULL */
-- --     update tour_stay_rooms
-- --       set
-- --         /* tour_stay_rooms.id_tour = NULL */
-- --         tour_stay_rooms.id_tour = NULL
-- --       from tour_stay_rooms,deleted
-- --       where
-- --         /* tour_stay_rooms.id_tour = deleted.id_tour */
-- --         tour_stay_rooms.id_tour = deleted.id_tour
-- -- 
-- -- 
-- --     /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --     return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- create trigger tI_tours on tours for INSERT as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* INSERT trigger on tours */
-- -- begin
-- --   declare  @numrows int,
-- --            @nullcnt int,
-- --            @validcnt int,
-- --            @errno   int,
-- --            @errmsg  varchar(255)
-- -- 
-- --   select @numrows = @@rowcount
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* direction R/14 tours ON CHILD INSERT SET NULL */
-- --   if
-- --     /* update(id_direction) */
-- --     update(id_direction)
-- --   begin
-- --     update tours
-- --       set
-- --         /* tours.id_direction = NULL */
-- --         tours.id_direction = NULL
-- --       from tours,inserted
-- --       where
-- --         /*  */
-- --          and
-- --         not exists (
-- --           select * from direction
-- --           where
-- --             /* inserted.id_direction = direction.id_direction */
-- --             inserted.id_direction = direction.id_direction
-- --         )
-- --   end
-- -- 
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- create trigger tU_tours on tours for UPDATE as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* UPDATE trigger on tours */
-- -- begin
-- --   declare  @numrows int,
-- --            @nullcnt int,
-- --            @validcnt int,
-- --            @insid_tour char(18),
-- --            @errno   int,
-- --            @errmsg  varchar(255)
-- -- 
-- --   select @numrows = @@rowcount
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* tours R/15 tour_transport ON PARENT UPDATE SET NULL */
-- --   if
-- --     /* update(id_tour) */
-- --     update(id_tour)
-- --   begin
-- --     update tour_transport
-- --       set
-- --         /* tour_transport.id_tour = NULL */
-- --         tour_transport.id_tour = NULL
-- --       from tour_transport,deleted
-- --       where
-- --         /* tour_transport.id_tour = deleted.id_tour */
-- --         tour_transport.id_tour = deleted.id_tour
-- --   end
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* tours R/12 tour_stay_rooms ON PARENT UPDATE SET NULL */
-- --   if
-- --     /* update(id_tour) */
-- --     update(id_tour)
-- --   begin
-- --     update tour_stay_rooms
-- --       set
-- --         /* tour_stay_rooms.id_tour = NULL */
-- --         tour_stay_rooms.id_tour = NULL
-- --       from tour_stay_rooms,deleted
-- --       where
-- --         /* tour_stay_rooms.id_tour = deleted.id_tour */
-- --         tour_stay_rooms.id_tour = deleted.id_tour
-- --   end
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* direction R/14 tours ON CHILD UPDATE SET NULL */
-- --   if
-- --     /* update(id_direction) */
-- --     update(id_direction)
-- --   begin
-- --     update tours
-- --       set
-- --         /* tours.id_direction = NULL */
-- --         tours.id_direction = NULL
-- --       from tours,inserted
-- --       where
-- --         /*  */
-- --          and 
-- --         not exists (
-- --           select * from direction
-- --           where
-- --             /* inserted.id_direction = direction.id_direction */
-- --             inserted.id_direction = direction.id_direction
-- --         )
-- --   end
-- -- 
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- 
-- -- create trigger tD_tour_stay_rooms on tour_stay_rooms for DELETE as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* DELETE trigger on tour_stay_rooms */
-- -- begin
-- --   declare  @errno   int,
-- --            @errmsg  varchar(255)
-- --     /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --     /* tour_stay_rooms R/17 order_rooms ON PARENT DELETE SET NULL */
-- --     update order_rooms
-- --       set
-- --         /* order_rooms.id_stay_room = NULL */
-- --         order_rooms.id_stay_room = NULL
-- --       from order_rooms,deleted
-- --       where
-- --         /* order_rooms.id_stay_room = deleted.id_stay_room */
-- --         order_rooms.id_stay_room = deleted.id_stay_room
-- -- 
-- -- 
-- --     /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --     return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- create trigger tI_tour_stay_rooms on tour_stay_rooms for INSERT as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* INSERT trigger on tour_stay_rooms */
-- -- begin
-- --   declare  @numrows int,
-- --            @nullcnt int,
-- --            @validcnt int,
-- --            @errno   int,
-- --            @errmsg  varchar(255)
-- -- 
-- --   select @numrows = @@rowcount
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* direction_stays_hotels R/13 tour_stay_rooms ON CHILD INSERT SET NULL */
-- --   if
-- --     /* update(id_stay) */
-- --     update(id_stay)
-- --   begin
-- --     update tour_stay_rooms
-- --       set
-- --         /* tour_stay_rooms.id_stay = NULL */
-- --         tour_stay_rooms.id_stay = NULL
-- --       from tour_stay_rooms,inserted
-- --       where
-- --         /*  */
-- --          and
-- --         not exists (
-- --           select * from direction_stays_hotels
-- --           where
-- --             /* inserted.id_stay = direction_stays_hotels.id_stay */
-- --             inserted.id_stay = direction_stays_hotels.id_stay
-- --         )
-- --   end
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* tours R/12 tour_stay_rooms ON CHILD INSERT SET NULL */
-- --   if
-- --     /* update(id_tour) */
-- --     update(id_tour)
-- --   begin
-- --     update tour_stay_rooms
-- --       set
-- --         /* tour_stay_rooms.id_tour = NULL */
-- --         tour_stay_rooms.id_tour = NULL
-- --       from tour_stay_rooms,inserted
-- --       where
-- --         /*  */
-- --          and
-- --         not exists (
-- --           select * from tours
-- --           where
-- --             /* inserted.id_tour = tours.id_tour */
-- --             inserted.id_tour = tours.id_tour
-- --         )
-- --   end
-- -- 
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- create trigger tU_tour_stay_rooms on tour_stay_rooms for UPDATE as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* UPDATE trigger on tour_stay_rooms */
-- -- begin
-- --   declare  @numrows int,
-- --            @nullcnt int,
-- --            @validcnt int,
-- --            @insid_stay_room int,
-- --            @errno   int,
-- --            @errmsg  varchar(255)
-- -- 
-- --   select @numrows = @@rowcount
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* tour_stay_rooms R/17 order_rooms ON PARENT UPDATE SET NULL */
-- --   if
-- --     /* update(id_stay_room) */
-- --     update(id_stay_room)
-- --   begin
-- --     update order_rooms
-- --       set
-- --         /* order_rooms.id_stay_room = NULL */
-- --         order_rooms.id_stay_room = NULL
-- --       from order_rooms,deleted
-- --       where
-- --         /* order_rooms.id_stay_room = deleted.id_stay_room */
-- --         order_rooms.id_stay_room = deleted.id_stay_room
-- --   end
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* direction_stays_hotels R/13 tour_stay_rooms ON CHILD UPDATE SET NULL */
-- --   if
-- --     /* update(id_stay) */
-- --     update(id_stay)
-- --   begin
-- --     update tour_stay_rooms
-- --       set
-- --         /* tour_stay_rooms.id_stay = NULL */
-- --         tour_stay_rooms.id_stay = NULL
-- --       from tour_stay_rooms,inserted
-- --       where
-- --         /*  */
-- --          and 
-- --         not exists (
-- --           select * from direction_stays_hotels
-- --           where
-- --             /* inserted.id_stay = direction_stays_hotels.id_stay */
-- --             inserted.id_stay = direction_stays_hotels.id_stay
-- --         )
-- --   end
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* tours R/12 tour_stay_rooms ON CHILD UPDATE SET NULL */
-- --   if
-- --     /* update(id_tour) */
-- --     update(id_tour)
-- --   begin
-- --     update tour_stay_rooms
-- --       set
-- --         /* tour_stay_rooms.id_tour = NULL */
-- --         tour_stay_rooms.id_tour = NULL
-- --       from tour_stay_rooms,inserted
-- --       where
-- --         /*  */
-- --          and 
-- --         not exists (
-- --           select * from tours
-- --           where
-- --             /* inserted.id_tour = tours.id_tour */
-- --             inserted.id_tour = tours.id_tour
-- --         )
-- --   end
-- -- 
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- 
-- -- create trigger tI_order_rooms on order_rooms for INSERT as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* INSERT trigger on order_rooms */
-- -- begin
-- --   declare  @numrows int,
-- --            @nullcnt int,
-- --            @validcnt int,
-- --            @errno   int,
-- --            @errmsg  varchar(255)
-- -- 
-- --   select @numrows = @@rowcount
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* tour_stay_rooms R/17 order_rooms ON CHILD INSERT SET NULL */
-- --   if
-- --     /* update(id_stay_room) */
-- --     update(id_stay_room)
-- --   begin
-- --     update order_rooms
-- --       set
-- --         /* order_rooms.id_stay_room = NULL */
-- --         order_rooms.id_stay_room = NULL
-- --       from order_rooms,inserted
-- --       where
-- --         /*  */
-- --          and
-- --         not exists (
-- --           select * from tour_stay_rooms
-- --           where
-- --             /* inserted.id_stay_room = tour_stay_rooms.id_stay_room */
-- --             inserted.id_stay_room = tour_stay_rooms.id_stay_room
-- --         )
-- --   end
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* order R/16 order_rooms ON CHILD INSERT RESTRICT */
-- --   if
-- --     /* update(id_order) */
-- --     update(id_order)
-- --   begin
-- --     select @nullcnt = 0
-- --     select @validcnt = count(*)
-- --       from inserted,order
-- --         where
-- --           /* inserted.id_order = order.id_order */
-- --           inserted.id_order = order.id_order
-- --     /*  */
-- --     
-- --     if @validcnt + @nullcnt != @numrows
-- --     begin
-- --       select @errno  = 30002,
-- --              @errmsg = 'Cannot INSERT order_rooms because order does not exist.'
-- --       goto error
-- --     end
-- --   end
-- -- 
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- create trigger tU_order_rooms on order_rooms for UPDATE as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* UPDATE trigger on order_rooms */
-- -- begin
-- --   declare  @numrows int,
-- --            @nullcnt int,
-- --            @validcnt int,
-- --            @insid_order int,
-- --            @errno   int,
-- --            @errmsg  varchar(255)
-- -- 
-- --   select @numrows = @@rowcount
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* tour_stay_rooms R/17 order_rooms ON CHILD UPDATE SET NULL */
-- --   if
-- --     /* update(id_stay_room) */
-- --     update(id_stay_room)
-- --   begin
-- --     update order_rooms
-- --       set
-- --         /* order_rooms.id_stay_room = NULL */
-- --         order_rooms.id_stay_room = NULL
-- --       from order_rooms,inserted
-- --       where
-- --         /*  */
-- --          and 
-- --         not exists (
-- --           select * from tour_stay_rooms
-- --           where
-- --             /* inserted.id_stay_room = tour_stay_rooms.id_stay_room */
-- --             inserted.id_stay_room = tour_stay_rooms.id_stay_room
-- --         )
-- --   end
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* order R/16 order_rooms ON CHILD UPDATE RESTRICT */
-- --   if
-- --     /* update(id_order) */
-- --     update(id_order)
-- --   begin
-- --     select @nullcnt = 0
-- --     select @validcnt = count(*)
-- --       from inserted,order
-- --         where
-- --           /* inserted.id_order = order.id_order */
-- --           inserted.id_order = order.id_order
-- --     /*  */
-- --     
-- --     if @validcnt + @nullcnt != @numrows
-- --     begin
-- --       select @errno  = 30007,
-- --              @errmsg = 'Cannot UPDATE order_rooms because order does not exist.'
-- --       goto error
-- --     end
-- --   end
-- -- 
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- 
-- -- create trigger tD_tour_transport on tour_transport for DELETE as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* DELETE trigger on tour_transport */
-- -- begin
-- --   declare  @errno   int,
-- --            @errmsg  varchar(255)
-- --     /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --     /* tour_transport R/19 order_transport ON PARENT DELETE SET NULL */
-- --     update order_transport
-- --       set
-- --         /* order_transport.id_transport = NULL */
-- --         order_transport.id_transport = NULL
-- --       from order_transport,deleted
-- --       where
-- --         /* order_transport.id_transport = deleted.id_transport */
-- --         order_transport.id_transport = deleted.id_transport
-- -- 
-- -- 
-- --     /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --     return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- create trigger tI_tour_transport on tour_transport for INSERT as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* INSERT trigger on tour_transport */
-- -- begin
-- --   declare  @numrows int,
-- --            @nullcnt int,
-- --            @validcnt int,
-- --            @errno   int,
-- --            @errmsg  varchar(255)
-- -- 
-- --   select @numrows = @@rowcount
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* tours R/15 tour_transport ON CHILD INSERT SET NULL */
-- --   if
-- --     /* update(id_tour) */
-- --     update(id_tour)
-- --   begin
-- --     update tour_transport
-- --       set
-- --         /* tour_transport.id_tour = NULL */
-- --         tour_transport.id_tour = NULL
-- --       from tour_transport,inserted
-- --       where
-- --         /*  */
-- --          and
-- --         not exists (
-- --           select * from tours
-- --           where
-- --             /* inserted.id_tour = tours.id_tour */
-- --             inserted.id_tour = tours.id_tour
-- --         )
-- --   end
-- -- 
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- create trigger tU_tour_transport on tour_transport for UPDATE as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* UPDATE trigger on tour_transport */
-- -- begin
-- --   declare  @numrows int,
-- --            @nullcnt int,
-- --            @validcnt int,
-- --            @insid_transport int,
-- --            @errno   int,
-- --            @errmsg  varchar(255)
-- -- 
-- --   select @numrows = @@rowcount
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* tour_transport R/19 order_transport ON PARENT UPDATE SET NULL */
-- --   if
-- --     /* update(id_transport) */
-- --     update(id_transport)
-- --   begin
-- --     update order_transport
-- --       set
-- --         /* order_transport.id_transport = NULL */
-- --         order_transport.id_transport = NULL
-- --       from order_transport,deleted
-- --       where
-- --         /* order_transport.id_transport = deleted.id_transport */
-- --         order_transport.id_transport = deleted.id_transport
-- --   end
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* tours R/15 tour_transport ON CHILD UPDATE SET NULL */
-- --   if
-- --     /* update(id_tour) */
-- --     update(id_tour)
-- --   begin
-- --     update tour_transport
-- --       set
-- --         /* tour_transport.id_tour = NULL */
-- --         tour_transport.id_tour = NULL
-- --       from tour_transport,inserted
-- --       where
-- --         /*  */
-- --          and 
-- --         not exists (
-- --           select * from tours
-- --           where
-- --             /* inserted.id_tour = tours.id_tour */
-- --             inserted.id_tour = tours.id_tour
-- --         )
-- --   end
-- -- 
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- 
-- -- create trigger tI_order_transport on order_transport for INSERT as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* INSERT trigger on order_transport */
-- -- begin
-- --   declare  @numrows int,
-- --            @nullcnt int,
-- --            @validcnt int,
-- --            @errno   int,
-- --            @errmsg  varchar(255)
-- -- 
-- --   select @numrows = @@rowcount
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* tour_transport R/19 order_transport ON CHILD INSERT SET NULL */
-- --   if
-- --     /* update(id_transport) */
-- --     update(id_transport)
-- --   begin
-- --     update order_transport
-- --       set
-- --         /* order_transport.id_transport = NULL */
-- --         order_transport.id_transport = NULL
-- --       from order_transport,inserted
-- --       where
-- --         /*  */
-- --          and
-- --         not exists (
-- --           select * from tour_transport
-- --           where
-- --             /* inserted.id_transport = tour_transport.id_transport */
-- --             inserted.id_transport = tour_transport.id_transport
-- --         )
-- --   end
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* order R/18 order_transport ON CHILD INSERT RESTRICT */
-- --   if
-- --     /* update(id_order) */
-- --     update(id_order)
-- --   begin
-- --     select @nullcnt = 0
-- --     select @validcnt = count(*)
-- --       from inserted,order
-- --         where
-- --           /* inserted.id_order = order.id_order */
-- --           inserted.id_order = order.id_order
-- --     /*  */
-- --     
-- --     if @validcnt + @nullcnt != @numrows
-- --     begin
-- --       select @errno  = 30002,
-- --              @errmsg = 'Cannot INSERT order_transport because order does not exist.'
-- --       goto error
-- --     end
-- --   end
-- -- 
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- create trigger tU_order_transport on order_transport for UPDATE as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* UPDATE trigger on order_transport */
-- -- begin
-- --   declare  @numrows int,
-- --            @nullcnt int,
-- --            @validcnt int,
-- --            @insid_order int,
-- --            @errno   int,
-- --            @errmsg  varchar(255)
-- -- 
-- --   select @numrows = @@rowcount
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* tour_transport R/19 order_transport ON CHILD UPDATE SET NULL */
-- --   if
-- --     /* update(id_transport) */
-- --     update(id_transport)
-- --   begin
-- --     update order_transport
-- --       set
-- --         /* order_transport.id_transport = NULL */
-- --         order_transport.id_transport = NULL
-- --       from order_transport,inserted
-- --       where
-- --         /*  */
-- --          and 
-- --         not exists (
-- --           select * from tour_transport
-- --           where
-- --             /* inserted.id_transport = tour_transport.id_transport */
-- --             inserted.id_transport = tour_transport.id_transport
-- --         )
-- --   end
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* order R/18 order_transport ON CHILD UPDATE RESTRICT */
-- --   if
-- --     /* update(id_order) */
-- --     update(id_order)
-- --   begin
-- --     select @nullcnt = 0
-- --     select @validcnt = count(*)
-- --       from inserted,order
-- --         where
-- --           /* inserted.id_order = order.id_order */
-- --           inserted.id_order = order.id_order
-- --     /*  */
-- --     
-- --     if @validcnt + @nullcnt != @numrows
-- --     begin
-- --       select @errno  = 30007,
-- --              @errmsg = 'Cannot UPDATE order_transport because order does not exist.'
-- --       goto error
-- --     end
-- --   end
-- -- 
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- 
-- -- create trigger tD_role on role for DELETE as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* DELETE trigger on role */
-- -- begin
-- --   declare  @errno   int,
-- --            @errmsg  varchar(255)
-- --     /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --     /* role R/21 user ON PARENT DELETE SET NULL */
-- --     update user
-- --       set
-- --         /* user.id_role = NULL */
-- --         user.id_role = NULL
-- --       from user,deleted
-- --       where
-- --         /* user.id_role = deleted.id_role */
-- --         user.id_role = deleted.id_role
-- -- 
-- -- 
-- --     /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --     return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- create trigger tU_role on role for UPDATE as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* UPDATE trigger on role */
-- -- begin
-- --   declare  @numrows int,
-- --            @nullcnt int,
-- --            @validcnt int,
-- --            @insid_role int,
-- --            @errno   int,
-- --            @errmsg  varchar(255)
-- -- 
-- --   select @numrows = @@rowcount
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* role R/21 user ON PARENT UPDATE SET NULL */
-- --   if
-- --     /* update(id_role) */
-- --     update(id_role)
-- --   begin
-- --     update user
-- --       set
-- --         /* user.id_role = NULL */
-- --         user.id_role = NULL
-- --       from user,deleted
-- --       where
-- --         /* user.id_role = deleted.id_role */
-- --         user.id_role = deleted.id_role
-- --   end
-- -- 
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- 
-- -- create trigger tI_user on user for INSERT as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* INSERT trigger on user */
-- -- begin
-- --   declare  @numrows int,
-- --            @nullcnt int,
-- --            @validcnt int,
-- --            @errno   int,
-- --            @errmsg  varchar(255)
-- -- 
-- --   select @numrows = @@rowcount
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* role R/21 user ON CHILD INSERT SET NULL */
-- --   if
-- --     /* update(id_role) */
-- --     update(id_role)
-- --   begin
-- --     update user
-- --       set
-- --         /* user.id_role = NULL */
-- --         user.id_role = NULL
-- --       from user,inserted
-- --       where
-- --         /*  */
-- --          and
-- --         not exists (
-- --           select * from role
-- --           where
-- --             /* inserted.id_role = role.id_role */
-- --             inserted.id_role = role.id_role
-- --         )
-- --   end
-- -- 
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- create trigger tU_user on user for UPDATE as
-- -- /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- -- /* UPDATE trigger on user */
-- -- begin
-- --   declare  @numrows int,
-- --            @nullcnt int,
-- --            @validcnt int,
-- --            @insid_user int,
-- --            @errno   int,
-- --            @errmsg  varchar(255)
-- -- 
-- --   select @numrows = @@rowcount
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   /* role R/21 user ON CHILD UPDATE SET NULL */
-- --   if
-- --     /* update(id_role) */
-- --     update(id_role)
-- --   begin
-- --     update user
-- --       set
-- --         /* user.id_role = NULL */
-- --         user.id_role = NULL
-- --       from user,inserted
-- --       where
-- --         /*  */
-- --          and 
-- --         not exists (
-- --           select * from role
-- --           where
-- --             /* inserted.id_role = role.id_role */
-- --             inserted.id_role = role.id_role
-- --         )
-- --   end
-- -- 
-- -- 
-- --   /* ERwin Builtin Sat Sep 20 01:08:43 2014 */
-- --   return
-- -- error:
-- --     raiserror @errno @errmsg
-- --     rollback transaction
-- -- end
-- -- go
-- -- 
-- -- 
